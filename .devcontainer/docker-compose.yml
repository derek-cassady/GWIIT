version: '3.8'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      POSTGRES_DB: gwiit_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Burp33B33t
      REDIS_URL: redis://redis:6379
      DJANGO_SETTINGS_MODULE: GWIIT.settings
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Burp33B33t
      POSTGRES_DB: gwiit_auth
    volumes:
      - gwiit_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# Overrides default command so things don't shut down after the process ends.
command: sleep infinity

volumes:
  gwiit_db_data:
  redis_data:
 
