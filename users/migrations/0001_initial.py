# Generated by Django 5.1.1 on 2025-01-22 04:04

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('organizations', '0001_initial'),
        ('sites', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(blank=True, db_index=True, max_length=30, null=True, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, db_index=True, max_length=30, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, db_index=True, max_length=30, null=True, verbose_name='Last Name')),
                ('badge_barcode', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True, verbose_name='Badge Barcode')),
                ('badge_rfid', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True, verbose_name='Badge RFID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone Number')),
                ('mfa_preference', models.CharField(choices=[('none', 'None'), ('google_authenticator', 'Google Authenticator'), ('sms', 'SMS'), ('email', 'Email'), ('static_otp', 'Static OTP')], default='none', max_length=50, verbose_name='MFA Preference')),
                ('mfa_secret', models.CharField(blank=True, max_length=100, null=True, verbose_name='MFA Secret')),
                ('static_otp', models.TextField(blank=True, null=True, verbose_name='Static OTP')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Last Login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_users', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_users', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='organizations.organization', verbose_name='Organization Name')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='sites.site', verbose_name='Site Name')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['email', 'username', 'first_name', 'last_name', 'badge_barcode', 'badge_rfid'],
                'indexes': [models.Index(fields=['email', 'username'], name='email_username_idx'), models.Index(fields=['first_name', 'last_name'], name='first_last_name_idx'), models.Index(fields=['username', 'first_name', 'last_name'], name='username_first_last_name_idx')],
            },
        ),
    ]
